# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  macos-x64:
    macos:
      xcode: "13.4.1"
    resource_class: macos.x86.medium.gen2

commands:
  dependencies:
    steps:
      - restore_cache:
          keys:
            - v1-brew-{{ arch }}-{{ checksum "Brewfile" }}
      - run:
          name: Installing dependencies
          command: brew bundle
      - save_cache:
          key: v1-brew-{{ arch }}-{{ checksum "Brewfile" }}
          paths:
            - /opt/homebrew/Library/Taps/homebrew/homebrew-bundle
            - /usr/local/Homebrew/Library/Taps/homebrew/homebrew-bundle
            - /Users/distiller/Library/Caches/Homebrew
      - run:
          name: Installing NPM dependencies
          # We are passing `--ignore-scripts` here, so that the installation
          # doesn't trigger `node-gyp rebuild` to run because that depends on
          # some of the binaries in `curl_build/vendor_install`, which is not
          # available until `scripts/build.js` is run.
          command: npm ci --ignore-scripts

  build:
    steps:
      - run:
          name: Build curl
          command: ./scripts/build.sh
      - run:
          name: Create relocatable library zip
          command: zip --symlinks -r relocatable_lib.zip curl_build/vendor_install/relocatable_lib
      - store_artifacts:
          path: relocatable_lib.zip
      - run:
          name: Native build
          command: npm run cmake:build
      - run:
          name: Package build
          command: npm run build

  format:
    steps:
      - run:
          name: Native format
          command: npm run cmake:format
      - run:
          name: Javascript lint
          command: npm run lint

  test:
    steps:
      - run:
          name: Curl test
          command: ./curl_build/vendor_install/bin/curl --http3 https://postman-echo.com/get
      - run:
          name: Native tests
          command: npm run cmake:test
      - run:
          name: Package tests
          command: npm test

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  macos:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    executor: macos-x64

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - dependencies
      - build
      - format
      - test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  wormhole:
    jobs:
      - macos
